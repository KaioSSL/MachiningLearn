# -*- coding: utf-8 -*-
"""IN_T2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ApsPnnXfE2QwAsB1OZHuKHhxaPA3iv5S

##**@Imports**
"""

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
from sklearn.cluster import KMeans
import seaborn as sns

"""##**@Funções**

## **@Upload da Base de Dados**
"""

dermatologyDb = pd.read_csv('dermatology.data',sep=',');
#dermatologyDb

"""##**@Pré-Processamento dos dados**

"""

#Informação do dataset
dermatologyDb.info()

#Removendo Idade fora do range e removendo strings da Idade.
dbAux = dermatologyDb[dermatologyDb["age"]!= "?"]
dbAux.fillna(method='bfill')
dermatologyDb.age.replace({"?":int(dbAux.age.median())},inplace = True)

#Verificação de Propriedades
dermatologyDb.describe()

#Removendo todos nulos
dermatologyDb.dropna()

"""##**@Aplicação do KMeans**"""



#Instaciação KMeans
kmeans = KMeans(n_clusters=6,random_state=0,max_iter=10000000,)

"""###@Aplicação com todas características"""

#Separando somente as características de cada Paciente. 
X = np.array(dermatologyDb.drop('target',axis = 1))
kmeans.fit(X)
dtResultKMeans = dermatologyDb.copy()
dtResultKMeans['Results'] = kmeans.labels_
dtAux = dtResultKMeans[dtResultKMeans['target']==dtResultKMeans['Results']]
precisao = len(dtAux)/len(dtResultKMeans)
print(precisao)
#print(precisao(dtResultKMeans,'target','Results'))

"""####@Plot"""

#Distribuição Sem K-Means
#sns.pairplot(dermatologyDb,hue='target')

#Distribuição K-Means
#sns.pairplot(dtResultKMeans,hue='Results')

"""###@Aplicação com características Clínicas"""

#Separando somente as características Clínicas de cada Paciente. 
X = np.array((dermatologyDb.drop(dermatologyDb.columns[12:33],axis = 1)).drop(columns=['target'],axis = 1))
kmeans.fit(X)
dtResultKMeans = dermatologyDb.copy()
dtResultKMeans['Results'] = kmeans.labels_
dtAux = dtResultKMeans[dtResultKMeans['target']==dtResultKMeans['Results']]
precisao = len(dtAux)/len(dtResultKMeans)
print(precisao)

"""####@Plot"""

#Distribuição Sem K-Means
#sns.pairplot((dermatologyDb.drop(dermatologyDb.columns[12:33],axis = 1)).drop(columns=['target'],axis = 1),hue='target')

#Distribuição K-Means
#sns.pairplot(dtResultKMeans,hue='Results')

"""###@Aplicação com características Histopatológicas"""

#Separando somente as características Clínicas de cada Paciente. 
X = np.array(((dermatologyDb.drop(dermatologyDb.columns[0:11],axis = 1)).drop(columns=['target'],axis = 1).drop(columns=['age'],axis = 1)))
kmeans.fit(X)
dtResultKMeans = dermatologyDb.copy()
dtResultKMeans['Results'] = kmeans.labels_
dtAux = dtResultKMeans[dtResultKMeans['target']==dtResultKMeans['Results']]
precisao = len(dtAux)/len(dtResultKMeans)
print(precisao)

"""####@Plot"""

#Distribuição Sem K-Means
#sns.pairplot(((dermatologyDb.drop(dermatologyDb.columns[0:11],axis = 1)).drop(columns=['target'],axis = 1).drop(columns=['age'],axis = 1)),hue='target')

#sns.pairplot(dtResultKMeans,hue='Results')